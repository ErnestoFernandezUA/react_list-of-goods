{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","initialGoods","goods","showHide","isVisibleButtonStart","isVisibleListOfGoods","isVisibleButtonFinish","isVisibleButtonRevers","isVisibleButtonSortAZ","isVisibleButtonReset","isVisibleButtonSortByLength","isVisibleFormSelect","maxLength","sortedAZ","startHandler","setState","prevState","finishHandler","sortByAlphabetHandler","sort","a","b","localeCompare","reverseListHandler","reverse","clearHandler","sortByLengthHandler","length","filterByLengthHandler","value","this","preparedGoods","filter","good","className","type","onClick","name","id","onChange","event","target","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0PAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoBIC,E,4MACJC,MAAe,CACbC,aAAa,GAAD,OAAMH,GAClBI,MAAM,GAAD,OAAMJ,GACXK,SAAU,CACRC,sBAAsB,EACtBC,sBAAsB,EACtBC,uBAAuB,EACvBC,uBAAuB,EACvBC,uBAAuB,EACvBC,sBAAsB,EACtBC,6BAA6B,EAC7BC,qBAAqB,GAEvBC,UAAW,EACXC,UAAU,G,EAGZC,aAAe,WACb,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1Bb,SAAS,2BACJa,EAAUb,UADP,IAENC,sBAAsB,EACtBC,sBAAsB,EACtBC,uBAAuB,EACvBC,uBAAuB,EACvBC,uBAAuB,EACvBC,sBAAsB,EACtBC,6BAA6B,EAC7BC,qBAAqB,S,EAK3BM,cAAgB,WACd,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1Bb,SAAS,2BACJa,EAAUb,UADP,IAENC,sBAAsB,EACtBC,sBAAsB,EACtBC,uBAAuB,EACvBC,uBAAuB,EACvBC,uBAAuB,EACvBC,sBAAsB,EACtBC,6BAA6B,EAC7BC,qBAAqB,S,EAK3BO,sBAAwB,WACjB,EAAKlB,MAAMa,SAMd,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,MAAM,YAAKc,EAAUd,MAAMiB,MAAK,SAACC,EAAWC,GAAZ,OAA0BA,EAAEC,cAAcF,OAC1EP,UAAU,MAPZ,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,MAAM,YAAKc,EAAUd,MAAMiB,MAAK,SAACC,EAAWC,GAAZ,OAA0BD,EAAEE,cAAcD,OAC1ER,UAAU,O,EAUhBU,mBAAqB,WACnB,EAAKR,UAAS,SAACC,GAAD,MAAgB,CAAEd,MAAM,YAAKc,EAAUd,MAAMsB,gB,EAG7DC,aAAe,WACb,EAAKV,UAAS,SAACC,GAAD,MAAgB,CAC5Bd,MAAM,YAAKc,EAAUf,cACrBW,UAAW,O,EAIfc,oBAAsB,WACpB,EAAKX,UAAS,SAACC,GAAD,MAAgB,CAC5Bd,MAAM,YAAKc,EAAUd,MAAMiB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEO,OAASN,EAAEM,gB,EAI3DC,sBAAwB,SAACC,GACvB,EAAKd,UAAS,iBAAO,CAAEH,WAAYiB,O,4CAGrC,WAA2B,IAAD,OACxB,EAKIC,KAAK9B,MAJPE,EADF,EACEA,MACAC,EAFF,EAEEA,SACAS,EAHF,EAGEA,UACAC,EAJF,EAIEA,SAIAT,EAQED,EARFC,qBACAE,EAOEH,EAPFG,sBACAD,EAMEF,EANFE,qBACAE,EAKEJ,EALFI,sBACAC,EAIEL,EAJFK,sBACAC,EAGEN,EAHFM,qBACAC,EAEEP,EAFFO,4BACAC,EACER,EADFQ,oBAGIoB,EAAgB7B,EAAM8B,QAAO,SAAAC,GAAI,OAAIA,EAAKN,QAAUf,KAE1D,OACE,sBAAKsB,UAAU,MAAf,UACE,uCACA,4BAAIhC,EAAMyB,SAETvB,GACC,wBACE+B,KAAK,SACLC,QAAS,WACP,EAAKtB,gBAHT,mBAUDR,GACC,wBACE6B,KAAK,SACLC,QAAS,WACP,EAAKnB,iBAHT,oBAUDR,GACC,wBACE0B,KAAK,SACLC,QAAS,WACP,EAAKX,gBAHT,mBAUDlB,GACC,wBACE4B,KAAK,SACLC,QAAS,WACP,EAAKb,sBAHT,oBAUDf,GACC,wBACE2B,KAAK,SACLC,QAAS,WACP,EAAKlB,yBAHT,SAMIL,EAEG,WADA,aAKRH,GACC,wBACEyB,KAAK,SACLC,QAAS,WACP,EAAKV,uBAHT,4BAUDf,GACC,mCACE,8BACE,qDACA,yBACE0B,KAAK,SACLC,GAAG,SACHT,MAAOC,KAAK9B,MAAMY,UAClB2B,SAAU,SAACC,GAAD,OAAW,EAAKZ,sBAAsBY,EAAMC,OAAOZ,QAJ/D,UAME,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,wBAMPxB,GACC,6BAEI0B,EAAcW,KAAI,SAAAT,GAAI,OACpB,6BAGGA,GAFIA,e,GAjNLU,IAAMC,WA8NT7C,IC5Pf8C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4005003c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  initialGoods: string[],\n  goods: string[],\n  showHide: {\n    isVisibleButtonStart: boolean,\n    isVisibleListOfGoods: boolean,\n    isVisibleButtonFinish: boolean;\n    isVisibleButtonRevers: boolean;\n    isVisibleButtonSortAZ: boolean;\n    isVisibleButtonReset: boolean;\n    isVisibleButtonSortByLength: boolean;\n    isVisibleFormSelect: boolean;\n  },\n  maxLength: number;\n  sortedAZ: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    initialGoods: [...goodsFromServer],\n    goods: [...goodsFromServer],\n    showHide: {\n      isVisibleButtonStart: true,\n      isVisibleListOfGoods: false,\n      isVisibleButtonFinish: false,\n      isVisibleButtonRevers: false,\n      isVisibleButtonSortAZ: false,\n      isVisibleButtonReset: false,\n      isVisibleButtonSortByLength: false,\n      isVisibleFormSelect: false,\n    },\n    maxLength: 1,\n    sortedAZ: false,\n  };\n\n  startHandler = () => {\n    this.setState(prevState => ({\n      showHide: {\n        ...prevState.showHide,\n        isVisibleButtonStart: false,\n        isVisibleListOfGoods: true,\n        isVisibleButtonFinish: true,\n        isVisibleButtonRevers: true,\n        isVisibleButtonSortAZ: true,\n        isVisibleButtonReset: true,\n        isVisibleButtonSortByLength: true,\n        isVisibleFormSelect: true,\n      },\n    }));\n  };\n\n  finishHandler = () => {\n    this.setState(prevState => ({\n      showHide: {\n        ...prevState.showHide,\n        isVisibleButtonStart: true,\n        isVisibleListOfGoods: false,\n        isVisibleButtonFinish: false,\n        isVisibleButtonRevers: false,\n        isVisibleButtonSortAZ: false,\n        isVisibleButtonReset: false,\n        isVisibleButtonSortByLength: false,\n        isVisibleFormSelect: false,\n      },\n    }));\n  };\n\n  sortByAlphabetHandler = () => {\n    if (!this.state.sortedAZ) {\n      this.setState(prevState => ({\n        goods: [...prevState.goods.sort((a: string, b: string) => a.localeCompare(b))],\n        sortedAZ: true,\n      }));\n    } else {\n      this.setState(prevState => ({\n        goods: [...prevState.goods.sort((a: string, b: string) => b.localeCompare(a))],\n        sortedAZ: false,\n      }));\n    }\n  };\n\n  reverseListHandler = () => {\n    this.setState((prevState) => ({ goods: [...prevState.goods.reverse()] }));\n  };\n\n  clearHandler = () => {\n    this.setState((prevState) => ({\n      goods: [...prevState.initialGoods],\n      maxLength: 1,\n    }));\n  };\n\n  sortByLengthHandler = () => {\n    this.setState((prevState) => ({\n      goods: [...prevState.goods.sort((a, b) => a.length - b.length)],\n    }));\n  };\n\n  filterByLengthHandler = (value: string) => {\n    this.setState(() => ({ maxLength: +value }));\n  };\n\n  render(): React.ReactNode {\n    const {\n      goods,\n      showHide,\n      maxLength,\n      sortedAZ,\n    } = this.state;\n\n    const {\n      isVisibleButtonStart,\n      isVisibleButtonFinish,\n      isVisibleListOfGoods,\n      isVisibleButtonRevers,\n      isVisibleButtonSortAZ,\n      isVisibleButtonReset,\n      isVisibleButtonSortByLength,\n      isVisibleFormSelect,\n    } = showHide;\n\n    const preparedGoods = goods.filter(good => good.length >= maxLength);\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <p>{goods.length}</p>\n\n        {isVisibleButtonStart && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.startHandler();\n            }}\n          >\n            Start\n          </button>\n        )}\n\n        {isVisibleButtonFinish && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.finishHandler();\n            }}\n          >\n            Finish\n          </button>\n        )}\n\n        {isVisibleButtonReset && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.clearHandler();\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n        {isVisibleButtonRevers && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.reverseListHandler();\n            }}\n          >\n            Revers\n          </button>\n        )}\n\n        {isVisibleButtonSortAZ && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.sortByAlphabetHandler();\n            }}\n          >\n            {!sortedAZ\n              ? ('Sort A-Z')\n              : ('Sort Z-A')}\n          </button>\n        )}\n\n        {isVisibleButtonSortByLength && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.sortByLengthHandler();\n            }}\n          >\n            Sort by length\n          </button>\n        )}\n\n        {isVisibleFormSelect && (\n          <>\n            <p>\n              <span>Filter by length </span>\n              <select\n                name=\"select\"\n                id=\"select\"\n                value={this.state.maxLength}\n                onChange={(event) => this.filterByLengthHandler(event.target.value)}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n              </select>\n            </p>\n          </>\n        )}\n\n        {isVisibleListOfGoods && (\n          <ul>\n            {\n              preparedGoods.map(good => (\n                <li\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))\n            }\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}